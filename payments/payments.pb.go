// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.14.0
// source: payments/payments.proto

package payments

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Empty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Empty) Reset() {
	*x = Empty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payments_payments_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_payments_payments_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_payments_payments_proto_rawDescGZIP(), []int{0}
}

type DayStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Receiving bool `protobuf:"varint,1,opt,name=receiving,proto3" json:"receiving,omitempty"`
}

func (x *DayStatus) Reset() {
	*x = DayStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payments_payments_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DayStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DayStatus) ProtoMessage() {}

func (x *DayStatus) ProtoReflect() protoreflect.Message {
	mi := &file_payments_payments_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DayStatus.ProtoReflect.Descriptor instead.
func (*DayStatus) Descriptor() ([]byte, []int) {
	return file_payments_payments_proto_rawDescGZIP(), []int{1}
}

func (x *DayStatus) GetReceiving() bool {
	if x != nil {
		return x.Receiving
	}
	return false
}

type TransactionItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name  string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Price int32  `protobuf:"varint,3,opt,name=price,proto3" json:"price,omitempty"`
}

func (x *TransactionItem) Reset() {
	*x = TransactionItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payments_payments_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransactionItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransactionItem) ProtoMessage() {}

func (x *TransactionItem) ProtoReflect() protoreflect.Message {
	mi := &file_payments_payments_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransactionItem.ProtoReflect.Descriptor instead.
func (*TransactionItem) Descriptor() ([]byte, []int) {
	return file_payments_payments_proto_rawDescGZIP(), []int{2}
}

func (x *TransactionItem) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *TransactionItem) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *TransactionItem) GetPrice() int32 {
	if x != nil {
		return x.Price
	}
	return 0
}

type TransactionSummary struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TotalItems   int32 `protobuf:"varint,1,opt,name=totalItems,proto3" json:"totalItems,omitempty"`
	TotalRevenue int32 `protobuf:"varint,2,opt,name=totalRevenue,proto3" json:"totalRevenue,omitempty"`
}

func (x *TransactionSummary) Reset() {
	*x = TransactionSummary{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payments_payments_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransactionSummary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransactionSummary) ProtoMessage() {}

func (x *TransactionSummary) ProtoReflect() protoreflect.Message {
	mi := &file_payments_payments_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransactionSummary.ProtoReflect.Descriptor instead.
func (*TransactionSummary) Descriptor() ([]byte, []int) {
	return file_payments_payments_proto_rawDescGZIP(), []int{3}
}

func (x *TransactionSummary) GetTotalItems() int32 {
	if x != nil {
		return x.TotalItems
	}
	return 0
}

func (x *TransactionSummary) GetTotalRevenue() int32 {
	if x != nil {
		return x.TotalRevenue
	}
	return 0
}

var File_payments_payments_proto protoreflect.FileDescriptor

var file_payments_payments_proto_rawDesc = []byte{
	0x0a, 0x17, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x70, 0x61, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x70, 0x61, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x22, 0x07, 0x0a, 0x05, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x29, 0x0a, 0x09,
	0x44, 0x61, 0x79, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x63,
	0x65, 0x69, 0x76, 0x69, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x72, 0x65,
	0x63, 0x65, 0x69, 0x76, 0x69, 0x6e, 0x67, 0x22, 0x4b, 0x0a, 0x0f, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x70,
	0x72, 0x69, 0x63, 0x65, 0x22, 0x58, 0x0a, 0x12, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x52, 0x65, 0x76, 0x65, 0x6e, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0c, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x52, 0x65, 0x76, 0x65, 0x6e, 0x75, 0x65, 0x32, 0xe1,
	0x01, 0x0a, 0x0b, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x34,
	0x0a, 0x0c, 0x73, 0x65, 0x74, 0x44, 0x61, 0x79, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x13,
	0x2e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x44, 0x61, 0x79, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x1a, 0x0f, 0x2e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x65,
	0x6d, 0x70, 0x74, 0x79, 0x12, 0x55, 0x0a, 0x18, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x12, 0x19, 0x2e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x1a, 0x1c, 0x2e, 0x70, 0x61,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x28, 0x01, 0x12, 0x45, 0x0a, 0x15, 0x67,
	0x65, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x53, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x12, 0x0f, 0x2e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2e,
	0x65, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x19, 0x2e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x74, 0x65, 0x6d,
	0x30, 0x01, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_payments_payments_proto_rawDescOnce sync.Once
	file_payments_payments_proto_rawDescData = file_payments_payments_proto_rawDesc
)

func file_payments_payments_proto_rawDescGZIP() []byte {
	file_payments_payments_proto_rawDescOnce.Do(func() {
		file_payments_payments_proto_rawDescData = protoimpl.X.CompressGZIP(file_payments_payments_proto_rawDescData)
	})
	return file_payments_payments_proto_rawDescData
}

var file_payments_payments_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_payments_payments_proto_goTypes = []interface{}{
	(*Empty)(nil),              // 0: payments.empty
	(*DayStatus)(nil),          // 1: payments.DayStatus
	(*TransactionItem)(nil),    // 2: payments.TransactionItem
	(*TransactionSummary)(nil), // 3: payments.TransactionSummary
}
var file_payments_payments_proto_depIdxs = []int32{
	1, // 0: payments.Transaction.setDayStatus:input_type -> payments.DayStatus
	2, // 1: payments.Transaction.createTransactionsStream:input_type -> payments.TransactionItem
	0, // 2: payments.Transaction.getTransactionsStream:input_type -> payments.empty
	0, // 3: payments.Transaction.setDayStatus:output_type -> payments.empty
	3, // 4: payments.Transaction.createTransactionsStream:output_type -> payments.TransactionSummary
	2, // 5: payments.Transaction.getTransactionsStream:output_type -> payments.TransactionItem
	3, // [3:6] is the sub-list for method output_type
	0, // [0:3] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_payments_payments_proto_init() }
func file_payments_payments_proto_init() {
	if File_payments_payments_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_payments_payments_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Empty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_payments_payments_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DayStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_payments_payments_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransactionItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_payments_payments_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransactionSummary); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_payments_payments_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_payments_payments_proto_goTypes,
		DependencyIndexes: file_payments_payments_proto_depIdxs,
		MessageInfos:      file_payments_payments_proto_msgTypes,
	}.Build()
	File_payments_payments_proto = out.File
	file_payments_payments_proto_rawDesc = nil
	file_payments_payments_proto_goTypes = nil
	file_payments_payments_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// TransactionClient is the client API for Transaction service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TransactionClient interface {
	SetDayStatus(ctx context.Context, in *DayStatus, opts ...grpc.CallOption) (*Empty, error)
	CreateTransactionsStream(ctx context.Context, opts ...grpc.CallOption) (Transaction_CreateTransactionsStreamClient, error)
	GetTransactionsStream(ctx context.Context, in *Empty, opts ...grpc.CallOption) (Transaction_GetTransactionsStreamClient, error)
}

type transactionClient struct {
	cc grpc.ClientConnInterface
}

func NewTransactionClient(cc grpc.ClientConnInterface) TransactionClient {
	return &transactionClient{cc}
}

func (c *transactionClient) SetDayStatus(ctx context.Context, in *DayStatus, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/payments.Transaction/setDayStatus", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *transactionClient) CreateTransactionsStream(ctx context.Context, opts ...grpc.CallOption) (Transaction_CreateTransactionsStreamClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Transaction_serviceDesc.Streams[0], "/payments.Transaction/createTransactionsStream", opts...)
	if err != nil {
		return nil, err
	}
	x := &transactionCreateTransactionsStreamClient{stream}
	return x, nil
}

type Transaction_CreateTransactionsStreamClient interface {
	Send(*TransactionItem) error
	CloseAndRecv() (*TransactionSummary, error)
	grpc.ClientStream
}

type transactionCreateTransactionsStreamClient struct {
	grpc.ClientStream
}

func (x *transactionCreateTransactionsStreamClient) Send(m *TransactionItem) error {
	return x.ClientStream.SendMsg(m)
}

func (x *transactionCreateTransactionsStreamClient) CloseAndRecv() (*TransactionSummary, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(TransactionSummary)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *transactionClient) GetTransactionsStream(ctx context.Context, in *Empty, opts ...grpc.CallOption) (Transaction_GetTransactionsStreamClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Transaction_serviceDesc.Streams[1], "/payments.Transaction/getTransactionsStream", opts...)
	if err != nil {
		return nil, err
	}
	x := &transactionGetTransactionsStreamClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Transaction_GetTransactionsStreamClient interface {
	Recv() (*TransactionItem, error)
	grpc.ClientStream
}

type transactionGetTransactionsStreamClient struct {
	grpc.ClientStream
}

func (x *transactionGetTransactionsStreamClient) Recv() (*TransactionItem, error) {
	m := new(TransactionItem)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// TransactionServer is the server API for Transaction service.
type TransactionServer interface {
	SetDayStatus(context.Context, *DayStatus) (*Empty, error)
	CreateTransactionsStream(Transaction_CreateTransactionsStreamServer) error
	GetTransactionsStream(*Empty, Transaction_GetTransactionsStreamServer) error
}

// UnimplementedTransactionServer can be embedded to have forward compatible implementations.
type UnimplementedTransactionServer struct {
}

func (*UnimplementedTransactionServer) SetDayStatus(context.Context, *DayStatus) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetDayStatus not implemented")
}
func (*UnimplementedTransactionServer) CreateTransactionsStream(Transaction_CreateTransactionsStreamServer) error {
	return status.Errorf(codes.Unimplemented, "method CreateTransactionsStream not implemented")
}
func (*UnimplementedTransactionServer) GetTransactionsStream(*Empty, Transaction_GetTransactionsStreamServer) error {
	return status.Errorf(codes.Unimplemented, "method GetTransactionsStream not implemented")
}

func RegisterTransactionServer(s *grpc.Server, srv TransactionServer) {
	s.RegisterService(&_Transaction_serviceDesc, srv)
}

func _Transaction_SetDayStatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DayStatus)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TransactionServer).SetDayStatus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/payments.Transaction/SetDayStatus",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TransactionServer).SetDayStatus(ctx, req.(*DayStatus))
	}
	return interceptor(ctx, in, info, handler)
}

func _Transaction_CreateTransactionsStream_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(TransactionServer).CreateTransactionsStream(&transactionCreateTransactionsStreamServer{stream})
}

type Transaction_CreateTransactionsStreamServer interface {
	SendAndClose(*TransactionSummary) error
	Recv() (*TransactionItem, error)
	grpc.ServerStream
}

type transactionCreateTransactionsStreamServer struct {
	grpc.ServerStream
}

func (x *transactionCreateTransactionsStreamServer) SendAndClose(m *TransactionSummary) error {
	return x.ServerStream.SendMsg(m)
}

func (x *transactionCreateTransactionsStreamServer) Recv() (*TransactionItem, error) {
	m := new(TransactionItem)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _Transaction_GetTransactionsStream_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(Empty)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(TransactionServer).GetTransactionsStream(m, &transactionGetTransactionsStreamServer{stream})
}

type Transaction_GetTransactionsStreamServer interface {
	Send(*TransactionItem) error
	grpc.ServerStream
}

type transactionGetTransactionsStreamServer struct {
	grpc.ServerStream
}

func (x *transactionGetTransactionsStreamServer) Send(m *TransactionItem) error {
	return x.ServerStream.SendMsg(m)
}

var _Transaction_serviceDesc = grpc.ServiceDesc{
	ServiceName: "payments.Transaction",
	HandlerType: (*TransactionServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "setDayStatus",
			Handler:    _Transaction_SetDayStatus_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "createTransactionsStream",
			Handler:       _Transaction_CreateTransactionsStream_Handler,
			ClientStreams: true,
		},
		{
			StreamName:    "getTransactionsStream",
			Handler:       _Transaction_GetTransactionsStream_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "payments/payments.proto",
}
